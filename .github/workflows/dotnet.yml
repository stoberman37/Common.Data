# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: 
      - main
      - feature/*
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal


# name: Publish nuget

# on:
#   push:
#     branches: [main]
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     timeout-minutes: 15
#     env:
#       project: MaximGorbatyuk.DatabaseSqlEndpoints
#       PROJECT_FOLDER: ./MaximGorbatyuk.DatabaseSqlEndpoints
#       PROJECT_FILE: MaximGorbatyuk.DatabaseSqlEndpoints/MaximGorbatyuk.DatabaseSqlEndpoints.csproj
#       NUGET_PKG_LINK: https://nuget.pkg.github.com/maximgorbatyuk/index.json
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Setup .NET Core
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: "6.0.x"

#     - name: Set version
#       run: |
#        echo "Buid version is ${{github.run_number}}"
#        sed -i "s/\(<Version>\([0-9]\+\.\)\{2\}\)\([0-9]\+\)/\1${{github.run_number}}/" ${{env.PROJECT_FILE}}

#     - name: Build
#       working-directory: ${{env.PROJECT_FOLDER}}
#       run: dotnet build --configuration Release

#     - name: Test
#       working-directory: ${{env.PROJECT_FOLDER}}
#       run: dotnet test --configuration Release --no-build

#     - name: Pack
#       working-directory: ${{env.PROJECT_FOLDER}}
#       run: dotnet pack --configuration Release --no-build --output .

#     - name: Publish nuget package
#       uses: brandedoutcast/publish-nuget@v2.5.2
#       with:
#           PROJECT_FILE_PATH: ${{env.PROJECT_FILE}}
#           NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        